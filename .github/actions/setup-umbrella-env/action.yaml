#
#  Copyright (c) 2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#  Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
#  See the NOTICE file(s) distributed with this work for additional
#  information regarding copyright ownership.
#
#  This program and the accompanying materials are made available under the
#  terms of the Apache License, Version 2.0 which is available at
#  https://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.
#
#  SPDX-License-Identifier: Apache-2.0
#
---
name: Umbrella E2E Test Environment
description: "Sets up the Umbrella E2E Test Environment"
runs:
  using: composite
  steps:
    - name: Start minikube
      id: minikube
      uses: medyagh/setup-minikube@cea33675329b799adccc9526aa5daccc26cd5052 # v0.0.19
      with:
        kubernetes-version: stable
        addons: ingress, ingress-dns

    - name: Get Cluster info
      shell: bash
      run: kubectl cluster-info --context minikube

    - name: Informational - describe node
      shell: bash
      run: |
        kubectl get nodes --show-labels
        kubectl describe node

    - name: Set minikube as dns server
      shell: bash
      run: |
        sudo mkdir -p /etc/systemd/resolved.conf.d
        sudo tee /etc/systemd/resolved.conf.d/minikube.conf << EOF
        [Resolve]
        DNS=$(minikube ip)
        Domains=~test
        EOF
        
        sudo systemctl daemon-reload
        sudo systemctl restart systemd-networkd
        sudo systemctl restart systemd-resolved

    - name: Set up Helm
      uses: azure/setup-helm@b7246b12e77f7134dc2d460a3d5bad15bbe29390 # v4.1.0
      with:
        version: 'latest'

    - name: Checkout umbrella chart
      uses: actions/checkout@v4
      with:
        repository: ds-jhartmann/tractus-x-umbrella
        ref: chore/update-e2e-irs-preparation

    - name: Install umbrella chart
      shell: bash
      run: |
        helm dependency update charts/tx-data-provider
        helm dependency update charts/umbrella
        helm install umbrella charts/umbrella -f charts/umbrella/values-adopter-irs.yaml --timeout 10m \
        --namespace e2e-testing --create-namespace --debug

    - name: Verify installation
      if: always()
      shell: bash
      run: |
        kubectl get pods -n e2e-testing
        kubectl logs svc/bdrs-server -n e2e-testing
        kubectl logs svc/mock-util-service -n e2e-testing
        kubectl logs svc/umbrella-dataprovider-edc-controlplane -n e2e-testing
        kubectl get ingresses -n e2e-testing

    - name: Checkout IRS chart
      uses: actions/checkout@v4

    - name: Cache maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build IRS
      shell: bash
      run: |
        minikube image build -t irs-api:testing .

    - name: Install Helm chart
      shell: bash
      run: |
        helm dependency update ./charts/item-relationship-service
        helm install irs ./charts/item-relationship-service --namespace e2e-testing \
        -f ./charts/item-relationship-service/values-umbrella.yaml

    - name: Setup python
      uses: actions/setup-python@v5
      with:
        python-version: 3.10.7
        cache: 'pip'

    - run: pip install -r local/testing/testdata/requirements.txt
      shell: bash

    - uses: azure/setup-kubectl@v3

    - run: |
        kubectl wait --for=condition=available deployment/umbrella-dataprovider-dtr --timeout=90s --namespace e2e-testing
        kubectl wait --for=condition=available deployment/umbrella-dataprovider-edc-controlplane --timeout=90s --namespace e2e-testing
        kubectl wait --for=condition=available deployment/umbrella-dataprovider-edc-dataplane --timeout=90s --namespace e2e-testing
        kubectl wait --for=condition=available deployment/umbrella-dataprovider-submodelserver --timeout=90s --namespace e2e-testing
        
        kubectl port-forward svc/umbrella-dataprovider-dtr 4444:8080 --namespace e2e-testing &
        kubectl port-forward svc/umbrella-dataprovider-edc-controlplane 8888:8081 --namespace e2e-testing &
        kubectl port-forward svc/umbrella-dataprovider-submodelserver 9999:8080 --namespace e2e-testing &
      shell: bash

    - name: Setup test data
      run: |
        chmod +x ./local/testing/testdata/upload-testdata.sh
        ./local/testing/testdata/upload-testdata.sh "TEST2" "BPNL00000003AYRE" "BPNL00000003AZQP" \
          "http://umbrella-dataprovider-submodelserver:8080" "http://localhost:9999" \
          "http://umbrella-dataprovider-dtr:8080/api/v3" "http://localhost:4444/api/v3" \
          "http://umbrella-dataprovider-edc-controlplane:8084" "http://localhost:8888" \
          "http://umbrella-dataprovider-edc-dataplane:8081"
      shell: bash

    - name: Wait for deployment
      id: deployment-ready
      shell: bash
      run: |
        kubectl wait --for=condition=available deployment/irs-item-relationship-service --timeout=90s --namespace e2e-testing
        kubectl port-forward svc/irs-item-relationship-service 8080:8080 --namespace e2e-testing &

    - name: Get Pods
      if: always() && steps.deployment-ready.outcome == 'success'
      shell: bash
      run: |
        kubectl get pods --namespace e2e-testing
        kubectl logs svc/irs-item-relationship-service -n e2e-testing
        
        curl --request GET --url http://localhost:8080/irs/aspectmodels \
          --header 'Content-Type: application/json' --header 'X-API-KEY: password'
