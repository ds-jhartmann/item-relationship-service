name: Setup Kubernetes Cluster

on:
  push:
    branches:
      - main

jobs:
  setup-kubernetes-cluster:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Kubernetes KinD Cluster
        uses: container-tools/kind-action@0ad70e2299366b0e1552c7240f4e4567148f723e #v2.0.4
        with:
          # upgrade version, default (v0.17.0) uses node image v1.21.1 and doesn't work with more recent node image versions
          version: v0.20.0
          # default value for event_name != workflow_dispatch
          node_image: 'kindest/node:v1.27.3'

      - name: Get Cluster info
        run: kubectl cluster-info --context kind-kind

      - name: Informational - describe node
        run: |
          kubectl get nodes --show-labels
          kubectl describe node

      - name: Set up Helm
        uses: azure/setup-helm@b7246b12e77f7134dc2d460a3d5bad15bbe29390 # v4.1.0
        with:
          version: 'latest'

      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply -f .github/configs/deploy.yaml

      - name: Describe Ingress Controller
        run: |
          kubectl describe svc/ingress-nginx-controller -n ingress-nginx

      - name: Get Pods
        run: |
          kubectl get pods -n ingress-nginx
          kubectl describe pod ingress-nginx-controller -n ingress-nginx

      - name: Verify Ingress Controller installation
        run: |
          kubectl wait --namespace ingress-nginx \
            --for=condition=ready pod \
            --selector=app.kubernetes.io/component=controller \
            --timeout=200s

      - name: Get Ingress Controller Logs
        if: always()
        run: |
          kubectl get pods -n ingress-nginx
          kubectl logs svc/ingress-nginx-controller -n ingress-nginx

      - name: Get Ingress Controller IP
        id: get_ingress_ip
        run: |
          NODE_NAME=$(kubectl get nodes -o jsonpath='{.items[0].metadata.name}')
          INGRESS_IP=$(kubectl get node $NODE_NAME -o json | jq -r '.status.addresses[] | select(.type=="InternalIP") | .address')
          
          echo "INGRESS_IP=$INGRESS_IP" >> $GITHUB_ENV

      - name: Add to CubeDNS
        run: |
          kubectl get configmap coredns -n kube-system -o json | jq '.data.Corefile += "\n    tx.test:53 {\n        errors\n        cache 30\n        forward . ${{ env.INGRESS_IP }}\n    }\n"' | kubectl apply -f -
          kubectl describe configmap coredns -n kube-system

      - name: Checkout umbrella chart
        uses: actions/checkout@v4
        with:
          repository: eclipse-tractusx/tractus-x-umbrella
          ref: chore/edc-0.7.0-iam-mock

      # Pull and build Jena Fuseki DB for semantic-hub
      - name: Pull Fuseki sources
        run: |
          curl https://repo1.maven.org/maven2/org/apache/jena/jena-fuseki-docker/4.7.0/jena-fuseki-docker-4.7.0.zip > ./jena-fuseki.zip
          unzip jena-fuseki.zip

      - name: Build and push Fuseki DB
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        with:
          context: jena-fuseki-docker-4.7.0
          push: true
          tags: kind-registry:5000/jena-fuseki-docker:4.7.0
          build-args: JENA_VERSION=4.7.0

      - name: Build iatp mock
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ./iatp-mock/
          push: true
          tags: kind-registry:5000/iatp-mock:testing

      - name: Install umbrella chart
        run: |
          helm dependency update charts/tx-data-provider
          helm dependency update charts/umbrella
          helm install umbrella charts/umbrella -f charts/values-test-data-exchange.yaml --timeout 5m \
          --namespace e2e-testing --create-namespace --debug \
          --set semantic-hub.graphdb.image=kind-registry:5000/jena-fuseki-docker:4.7.0 \
          --set iatpmock.image.repository=kind-registry:5000/iatp-mock --set iatpmock.image.tag=testing

      - name: Verify installation
        if: always()
        run: |
          kubectl get pods -n e2e-testing
          kubectl logs svc/bdrs-server -n e2e-testing
          kubectl logs svc/mock-util-service -n e2e-testing
          kubectl logs svc/umbrella-dataprovider-edc-controlplane -n e2e-testing
          kubectl get ingresses -n e2e-testing
          ping localhost/health